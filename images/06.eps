%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: lionel shen
%%Title: Window .!canvas
%%CreationDate: Mon Apr 27 19:22:45 2020
%%BoundingBox: -113 3 726 790
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
4 -392 translate
-423 785 moveto 415 785 lineto 415 0 lineto -423 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 388 moveto
0 388 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
47 388 lineto
87.7031939778686 364.5 lineto
111.203193977869 323.796806022131 lineto
111.203193977869 276.796806022131 lineto
87.7031939778687 236.093612044263 lineto
47.0000000000001 212.593612044263 lineto
5.6843418860808e-14 212.593612044263 lineto
-40.7031939778686 236.093612044263 lineto
-64.2031939778686 276.796806022131 lineto
-64.2031939778687 323.796806022131 lineto
-40.7031939778687 364.5 lineto
-9.2370555648813e-14 388 lineto
23.5 347.296806022131 lineto
23.5 300.296806022131 lineto
8.17124146124115e-14 259.593612044263 lineto
-40.7031939778685 236.093612044263 lineto
-87.7031939778685 236.093612044263 lineto
-128.406387955737 259.593612044263 lineto
-151.906387955737 300.296806022131 lineto
-151.906387955737 347.296806022131 lineto
-128.406387955737 388 lineto
-87.7031939778688 411.5 lineto
-40.7031939778688 411.5 lineto
-1.70530256582424e-13 388 lineto
-23.5000000000001 347.296806022131 lineto
-64.2031939778686 323.796806022131 lineto
-111.203193977869 323.796806022131 lineto
-151.906387955737 347.296806022131 lineto
-175.406387955737 388 lineto
-175.406387955738 435 lineto
-151.906387955738 475.703193977868 lineto
-111.203193977869 499.203193977868 lineto
-64.2031939778691 499.203193977869 lineto
-23.5000000000005 475.703193977869 lineto
-3.19744231092045e-13 435 lineto
-1.60593760512029e-13 388 lineto
-47.0000000000002 388 lineto
-87.7031939778689 411.5 lineto
-111.203193977869 452.203193977868 lineto
-111.203193977869 499.203193977868 lineto
-87.7031939778694 539.906387955737 lineto
-47.0000000000009 563.406387955737 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-47.0000000000009 563.406387955737 moveto
-8.5265128291212e-13 563.406387955737 lineto
40.7031939778679 539.906387955738 lineto
64.203193977868 499.203193977869 lineto
64.2031939778683 452.203193977869 lineto
40.7031939778684 411.5 lineto
-7.105427357601e-14 388 lineto
-23.5000000000003 428.703193977869 lineto
-23.5000000000005 475.703193977869 lineto
-6.89226453687297e-13 516.406387955737 lineto
40.7031939778678 539.906387955738 lineto
87.7031939778678 539.906387955738 lineto
128.406387955737 516.406387955738 lineto
151.906387955737 475.70319397787 lineto
151.906387955737 428.70319397787 lineto
128.406387955737 388.000000000001 lineto
87.7031939778688 364.500000000001 lineto
40.7031939778688 364.5 lineto
0 388 lineto
23.4999999999998 428.703193977869 lineto
64.2031939778682 452.203193977869 lineto
111.203193977868 452.203193977869 lineto
151.906387955737 428.70319397787 lineto
175.406387955737 388.000000000001 lineto
175.406387955738 341.000000000001 lineto
151.906387955738 300.296806022132 lineto
111.203193977869 276.796806022132 lineto
64.2031939778693 276.796806022132 lineto
23.5000000000006 300.296806022131 lineto
2.62900812231237e-13 341 lineto
-6.84452494681409e-14 388 lineto
43 388 lineto
80.239092362731 366.500000000001 lineto
101.739092362731 329.26090763727 lineto
101.739092362732 286.26090763727 lineto
80.2390923627319 249.021815274539 lineto
43.0000000000012 227.521815274538 lineto
1.13686837721616e-12 227.521815274538 lineto
-37.2390923627299 249.021815274538 lineto
-58.7390923627302 286.260907637268 lineto
-58.7390923627306 329.260907637269 lineto
-37.2390923627309 366.5 lineto
-1.63424829224823e-13 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-1.63424829224823e-13 388 moveto
21.5000000000002 350.760907637269 lineto
21.5000000000005 307.760907637269 lineto
8.45545855554519e-13 270.521815274538 lineto
-37.2390923627298 249.021815274538 lineto
-80.2390923627299 249.021815274537 lineto
-117.478184725461 270.521815274537 lineto
-138.978184725461 307.760907637268 lineto
-138.978184725462 350.760907637268 lineto
-117.478184725462 387.999999999999 lineto
-80.2390923627314 409.499999999999 lineto
-37.2390923627313 409.5 lineto
-2.55795384873636e-13 388 lineto
-21.4999999999999 350.760907637269 lineto
-58.7390923627306 329.260907637268 lineto
-101.739092362731 329.260907637268 lineto
-138.978184725462 350.760907637268 lineto
-160.478184725462 387.999999999998 lineto
-160.478184725463 430.999999999998 lineto
-138.978184725463 468.239092362729 lineto
-101.739092362732 489.73909236273 lineto
-58.7390923627322 489.73909236273 lineto
-21.5000000000011 468.239092362731 lineto
-7.38964445190504e-13 431 lineto
-2.75890421619351e-13 388 lineto
-43.0000000000003 388 lineto
-80.2390923627314 409.499999999999 lineto
-101.739092362732 446.73909236273 lineto
-101.739092362732 489.73909236273 lineto
-80.2390923627327 526.978184725461 lineto
-43.0000000000021 548.478184725461 lineto
-2.07478478841949e-12 548.478184725462 lineto
37.239092362729 526.978184725462 lineto
58.7390923627295 489.739092362732 lineto
58.73909236273 446.739092362732 lineto
37.2390923627304 409.500000000001 lineto
-2.1316282072803e-13 388 lineto
-21.5000000000007 425.239092362731 lineto
-21.5000000000012 468.239092362731 lineto
-1.64135371960583e-12 505.478184725462 lineto
37.239092362729 526.978184725462 lineto
80.239092362729 526.978184725463 lineto
117.47818472546 505.478184725463 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
117.47818472546 505.478184725463 moveto
138.978184725461 468.239092362733 lineto
138.978184725461 425.239092362733 lineto
117.478184725462 388.000000000002 lineto
80.239092362731 366.500000000001 lineto
37.239092362731 366.5 lineto
-1.35003119794419e-13 388 lineto
21.4999999999994 425.239092362731 lineto
58.73909236273 446.739092362732 lineto
101.73909236273 446.739092362732 lineto
138.978184725461 425.239092362733 lineto
160.478184725462 388.000000000002 lineto
160.478184725462 345.000000000002 lineto
138.978184725463 307.760907637271 lineto
101.739092362732 286.26090763727 lineto
58.7390923627322 286.26090763727 lineto
21.500000000001 307.760907637269 lineto
4.47641923528863e-13 345 lineto
-1.63424829224823e-13 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
