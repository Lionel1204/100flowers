%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: lionel shen
%%Title: Window .!canvas
%%CreationDate: Mon Apr 27 19:18:42 2020
%%BoundingBox: -113 3 726 790
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
4 -392 translate
-423 785 moveto 415 785 lineto 415 0 lineto -423 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 388 moveto
0 388 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
35.7142857142857 388 lineto
67.8917452822293 372.504152174373 lineto
90.1592382057555 344.581599229086 lineto
98.106414418481 309.762745222592 lineto
90.1592382057555 274.943891216099 lineto
67.8917452822293 247.021338270812 lineto
35.7142857142857 231.525490445185 lineto
1.4210854715202e-14 231.525490445185 lineto
-32.1774595679435 247.021338270812 lineto
-54.4449524914697 274.943891216099 lineto
-62.3921287041953 309.762745222592 lineto
-54.4449524914698 344.581599229086 lineto
-32.1774595679436 372.504152174373 lineto
0 388 lineto
28.8934640848196 367.007669560983 lineto
45.8173448874267 335.557829137528 lineto
47.4196602570879 299.879505332481 lineto
33.3830519837335 267.039227741358 lineto
6.48764248360455 243.541416100654 lineto
-27.9396025412474 234.040100187558 lineto
-63.0799449911985 240.417132144652 lineto
-91.973409076018 261.409462583669 lineto
-108.897289878625 292.859303007124 lineto
-110.499605248286 328.537626812171 lineto
-96.462996974932 361.377904403295 lineto
-69.567587474803 384.875716043999 lineto
-35.1403424499511 394.377031957094 lineto
7.105427357601e-15 388 lineto
11.0363212276767 354.033695846602 lineto
6.24227601990331 318.642632926318 lineto
-13.4326161748146 288.836445293415 lineto
-44.0915016605956 270.518613957489 lineto
-79.6620121604256 267.317210068081 lineto
-113.098971826131 279.866310928129 lineto
-137.779780718519 305.680413207679 lineto
-148.816101946195 339.646717361077 lineto
-144.022056738422 375.03778028136 lineto
-124.347164543704 404.843967914264 lineto
-93.688279057923 423.161799250189 lineto
-58.117768558093 426.363203139598 lineto
-24.6808088923881 413.81410227955 lineto
3.5527136788005e-15 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
3.5527136788005e-15 388 moveto
-11.0363212276767 354.033695846602 lineto
-35.7171301200647 328.219593567052 lineto
-69.1540897857697 315.670492707004 lineto
-104.7246002856 318.871896596412 lineto
-135.383485771381 337.189727932338 lineto
-155.058377966099 366.995915565241 lineto
-159.852423173872 402.386978485525 lineto
-148.816101946195 436.353282638923 lineto
-124.135293053807 462.167384918473 lineto
-90.6983333881024 474.716485778521 lineto
-55.1278228882724 471.515081889112 lineto
-24.4689374024914 453.197250553187 lineto
-4.79404520777343 423.391062920284 lineto
1.50990331349021e-14 388 lineto
-28.8934640848196 367.007669560983 lineto
-64.0338065347707 360.630637603889 lineto
-98.4610515596226 370.131953516984 lineto
-125.356461059752 393.629765157689 lineto
-139.393069333106 426.470042748812 lineto
-137.790753963445 462.148366553859 lineto
-120.866873160838 493.598206977314 lineto
-91.9734090760182 514.590537416331 lineto
-56.8330666260671 520.967569373425 lineto
-22.4058216012151 511.466253460329 lineto
4.48958789891392 487.968441819625 lineto
18.5261961722684 455.128164228502 lineto
16.9238808026072 419.449840423455 lineto
7.8159700933611e-14 388 lineto
-35.7142857142857 388 lineto
-67.8917452822294 403.495847825627 lineto
-90.1592382057556 431.418400770914 lineto
-98.1064144184812 466.237254777408 lineto
-90.1592382057557 501.056108783902 lineto
-67.8917452822295 528.978661729188 lineto
-35.7142857142859 544.474509554816 lineto
-7.8159700933611e-14 544.474509554816 lineto
32.1774595679436 528.978661729189 lineto
54.4449524914699 501.056108783902 lineto
62.3921287041954 466.237254777408 lineto
54.4449524914699 431.418400770914 lineto
32.1774595679437 403.495847825627 lineto
1.27897692436818e-13 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
1.27897692436818e-13 388 moveto
-28.8934640848195 408.992330439017 lineto
-45.8173448874267 440.442170862472 lineto
-47.419660257088 476.120494667519 lineto
-33.3830519837336 508.960772258642 lineto
-6.48764248360459 532.458583899347 lineto
27.9396025412474 541.959899812442 lineto
63.0799449911986 535.582867855348 lineto
91.9734090760182 514.590537416331 lineto
108.897289878625 483.140696992876 lineto
110.499605248287 447.462373187829 lineto
96.4629969749323 414.622095596706 lineto
69.5675874748033 391.124283956002 lineto
35.1403424499513 381.622968042906 lineto
1.49213974509621e-13 388 lineto
-11.0363212276766 421.966304153398 lineto
-6.24227601990327 457.357367073682 lineto
13.4326161748147 487.163554706586 lineto
44.0915016605957 505.481386042511 lineto
79.6620121604257 508.68278993192 lineto
113.098971826131 496.133689071872 lineto
137.779780718519 470.319586792322 lineto
148.816101946196 436.353282638923 lineto
144.022056738422 400.96221971864 lineto
124.347164543704 371.156032085736 lineto
93.6882790579234 352.838200749811 lineto
58.1177685580933 349.636796860402 lineto
24.6808088923883 362.18589772045 lineto
1.10134124042816e-13 388 lineto
11.0363212276768 421.966304153398 lineto
35.7171301200649 447.780406432948 lineto
69.1540897857699 460.329507292996 lineto
104.7246002856 457.128103403588 lineto
135.383485771381 438.810272067663 lineto
155.058377966099 409.004084434759 lineto
159.852423173873 373.613021514476 lineto
148.816101946196 339.646717361077 lineto
124.135293053808 313.832615081527 lineto
90.6983333881028 301.283514221479 lineto
55.1278228882727 304.484918110888 lineto
24.4689374024916 322.802749446813 lineto
4.79404520777357 352.608937079716 lineto
8.88178419700125e-14 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
8.88178419700125e-14 388 moveto
28.8934640848197 408.992330439017 lineto
64.0338065347709 415.369362396111 lineto
98.4610515596229 405.868046483016 lineto
125.356461059752 382.370234842312 lineto
139.393069333107 349.529957251188 lineto
137.790753963445 313.851633446141 lineto
120.866873160838 282.401793022686 lineto
91.9734090760186 261.409462583669 lineto
56.8330666260674 255.032430626575 lineto
22.4058216012154 264.53374653967 lineto
-4.48958789891373 288.031558180375 lineto
-18.5261961722683 320.871835771498 lineto
-16.9238808026071 356.550159576545 lineto
4.61852778244065e-14 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
4.61852778244065e-14 388 moveto
-8.99999999999996 393 lineto
-6.99999999999995 388 lineto
-8.99999999999994 383 lineto
4.61852778244065e-14 388 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
4.61852778244065e-14 388 moveto
-8.99999999999996 393 lineto
-6.99999999999995 388 lineto
-8.99999999999994 383 lineto
4.61852778244065e-14 388 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
