%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: lionel shen
%%Title: Window .!canvas
%%CreationDate: Tue Apr 28 17:35:55 2020
%%BoundingBox: -113 3 726 790
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
4 -392 translate
-423 785 moveto 415 785 lineto 415 0 lineto -423 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 388 moveto
0 388 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
4.89858719658941e-15 468 moveto
-56 564.994845223857 lineto
56 564.994845223857 lineto
5.6843418860808e-14 468 lineto
-45 545.942286340599 lineto
45 545.9422863406 lineto
9.2370555648813e-14 468 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
47.022820183398 452.721359549996 moveto
58.730008069375 564.107811831243 lineto
149.339911439369 498.275863574486 lineto
47.022820183398 452.721359549996 lineto
56.4303818774866 542.228330133141 lineto
129.241911371232 489.327657426818 lineto
47.022820183398 452.721359549996 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
76.0845213036126 412.721359549996 moveto
151.027149215805 495.953580003464 lineto
185.637052585799 389.435250178407 lineto
76.0845213036127 412.721359549996 lineto
136.30627587591 479.604393842962 lineto
164.117805369655 394.009307376398 lineto
76.0845213036127 412.721359549996 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
76.0845213036129 363.278640450004 moveto
185.637052585799 386.564749821594 lineto
151.027149215806 280.046419996536 lineto
76.0845213036129 363.278640450004 lineto
164.117805369655 381.990692623603 lineto
136.306275875911 296.395606157039 lineto
76.0845213036129 363.278640450004 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
47.0228201833987 323.278640450004 moveto
149.33991143937 277.724136425515 lineto
58.7300080693767 211.892188168757 lineto
47.0228201833987 323.278640450004 lineto
129.241911371233 286.672342573182 lineto
56.4303818774882 233.771669866859 lineto
47.0228201833986 323.278640450004 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
7.8337336617551e-13 307.999999999999 moveto
56.0000000000017 211.005154776142 lineto
-55.9999999999985 211.005154776141 lineto
7.38964445190504e-13 307.999999999999 lineto
45.0000000000015 230.0577136594 lineto
-44.9999999999986 230.057713659399 lineto
6.96331881044898e-13 307.999999999999 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-47.0228201833974 323.278640450003 moveto
-58.7300080693735 211.892188168756 lineto
-149.339911439369 277.724136425512 lineto
-47.0228201833974 323.278640450003 lineto
-56.4303818774853 233.771669866858 lineto
-129.241911371231 286.67234257318 lineto
-47.0228201833975 323.278640450003 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-76.0845213036124 363.278640450003 moveto
-151.027149215804 280.046419996534 lineto
-185.637052585799 386.564749821591 lineto
-76.0845213036124 363.278640450003 lineto
-136.306275875909 296.395606157036 lineto
-164.117805369655 381.9906926236 lineto
-76.0845213036125 363.278640450003 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-76.0845213036131 412.721359549995 moveto
-185.637052585799 389.435250178404 lineto
-151.027149215807 495.953580003462 lineto
-76.0845213036131 412.721359549995 lineto
-164.117805369656 394.009307376395 lineto
-136.306275875912 479.604393842959 lineto
-76.0845213036131 412.721359549995 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-47.0228201833992 452.721359549995 moveto
-149.339911439372 498.275863574483 lineto
-58.7300080693781 564.107811831242 lineto
-47.0228201833991 452.721359549995 lineto
-129.241911371234 489.327657426816 lineto
-56.4303818774894 542.22833013314 lineto
-47.0228201833991 452.721359549995 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-80 388 moveto
-78.7892451278931 401.838991514007 lineto
-75.1937686856895 415.257492273729 lineto
-69.3228174056867 427.84778792367 lineto
-61.3547771716827 439.227328701504 lineto
-51.531752854165 449.050353019022 lineto
-40.1522120763312 457.018393253027 lineto
-27.5619164263902 462.88934453303 lineto
-14.1434156666686 466.484820975234 lineto
-0.304424152661404 467.695575847341 lineto
13.5345673613458 466.484820975234 lineto
26.9530681210676 462.889344533031 lineto
39.5433637710087 457.018393253028 lineto
50.9229045488428 449.050353019024 lineto
60.7459288663609 439.227328701506 lineto
68.7139691003652 427.847787923672 lineto
74.5849203803685 415.257492273731 lineto
78.1803968225726 401.83899151401 lineto
79.3911516946799 388.000000000003 lineto
78.180396822573 374.161008485995 lineto
74.5849203803694 360.742507726274 lineto
68.7139691003666 348.152212076332 lineto
60.7459288663626 336.772671298498 lineto
50.9229045488449 326.94964698098 lineto
39.5433637710111 318.981606746976 lineto
26.9530681210701 313.110655466973 lineto
13.5345673613485 309.515179024769 lineto
-0.304424152658706 308.304424152661 lineto
-14.1434156666659 309.515179024768 lineto
-27.5619164263877 313.110655466972 lineto
-40.1522120763289 318.981606746975 lineto
-51.531752854163 326.949646980979 lineto
-61.354777171681 336.772671298496 lineto
-69.3228174056854 348.15221207633 lineto
-75.1937686856887 360.742507726271 lineto
-78.7892451278928 374.161008485993 lineto
-80.0000000000001 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-30 388 moveto
-29.5459669229599 393.189621817753 lineto
-28.1976632571336 398.221559602648 lineto
-25.9960565271325 402.942920471376 lineto
-23.008041439381 407.210248263064 lineto
-19.3244073203119 410.893882382133 lineto
-15.0570795286242 413.881897469885 lineto
-10.3357186598963 416.083504199886 lineto
-5.30378087500071 417.431807865713 lineto
-0.11415905724801 417.885840942753 lineto
5.07546276050471 417.431807865713 lineto
10.1074005454004 416.083504199887 lineto
14.8287614141283 413.881897469886 lineto
19.0960892058161 410.893882382134 lineto
22.7797233248854 407.210248263065 lineto
25.767738412637 402.942920471377 lineto
27.9693451426383 398.221559602649 lineto
29.3176488084648 393.189621817754 lineto
29.771681885505 388.000000000001 lineto
29.317648808465 382.810378182248 lineto
27.9693451426386 377.778440397353 lineto
25.7677384126375 373.057079528625 lineto
22.779723324886 368.789751736937 lineto
19.0960892058169 365.106117617868 lineto
14.8287614141292 362.118102530116 lineto
10.1074005454014 359.916495800115 lineto
5.07546276050573 358.568192134288 lineto
-0.114159057246972 358.114159057248 lineto
-5.30378087499969 358.568192134288 lineto
-10.3357186598954 359.916495800114 lineto
-15.0570795286233 362.118102530115 lineto
-19.3244073203111 365.106117617867 lineto
-23.0080414393804 368.789751736936 lineto
-25.996056527132 373.057079528624 lineto
-28.1976632571332 377.778440397352 lineto
-29.5459669229598 382.810378182247 lineto
-30 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
