%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: lionel shen
%%Title: Window .!canvas
%%CreationDate: Mon Apr 27 21:13:36 2020
%%BoundingBox: -113 3 726 790
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
4 -392 translate
-423 785 moveto 415 785 lineto 415 0 lineto -423 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 388 moveto
0 388 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
19.0286133317598 386.335212050853 lineto
37.4790518763771 381.391431942823 lineto
54.790708395046 373.318873932818 lineto
70.4375769645677 362.362818611063 lineto
83.9442354011547 348.856160174476 lineto
94.9002907229103 333.209291604954 lineto
102.972848732915 315.897635086285 lineto
107.916628840945 297.447196541668 lineto
109.581416790092 278.418583209908 lineto
107.916628840945 259.389969878148 lineto
102.972848732915 240.939531333531 lineto
88.2689202492819 242.225958385145 lineto
74.0117631920777 246.046152104986 lineto
60.6345740640154 252.284037839989 lineto
48.5438119875668 260.750080588619 lineto
38.1068486502041 271.187043925981 lineto
29.6408059015747 283.27780600243 lineto
23.4029201665715 296.654995130492 lineto
19.5827264467299 310.912152187697 lineto
18.2962993951161 325.616080671329 lineto
19.5827264467299 340.320009154962 lineto
23.4029201665714 354.577166212166 lineto
29.6408059015747 367.954355340228 lineto
38.106848650204 380.045117416677 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
12.2780786753845 373.367555628456 lineto
21.8287284470657 356.825344978608 lineto
28.361757654593 338.875994750289 lineto
31.6786635113681 320.064886867378 lineto
31.6786635113681 300.963587324015 lineto
28.3617576545931 282.152479441104 lineto
21.8287284470658 264.203129212785 lineto
12.2780786753846 247.660918562937 lineto
1.75859327100625e-13 233.028474191393 lineto
-14.6324443715436 220.750395516008 lineto
-31.1746550213915 211.199745744327 lineto
-40.6622612705523 222.506634576884 lineto
-48.0423088213968 235.289251897221 lineto
-53.0905586635771 249.159204346376 lineto
-55.653622280176 263.695060437717 lineto
-55.653622280176 278.455155539406 lineto
-53.0905586635771 292.991011630747 lineto
-48.0423088213969 306.860964079903 lineto
-40.6622612705524 319.64358140024 lineto
-31.1746550213917 330.950470232796 lineto
-19.8677661888351 340.438076481957 lineto
-7.08514886849811 347.818124032802 lineto
6.78480358065737 352.866373874982 lineto
21.3206596719983 355.429437491581 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
-1.66478794914722 368.97138666824 lineto
-6.60856805717745 350.520948123623 lineto
-14.6811260671816 333.209291604954 lineto
-25.6371813889373 317.562423035432 lineto
-39.1438398255243 304.055764598845 lineto
-54.7907083950459 293.099709277089 lineto
-72.1023649137149 285.027151267085 lineto
-90.5528034583322 280.083371159055 lineto
-109.581416790092 278.418583209908 lineto
-128.610030121852 280.083371159055 lineto
-147.060468666469 285.027151267085 lineto
-145.774041614856 299.731079750718 lineto
-141.953847895014 313.988236807922 lineto
-135.715962160011 327.365425935984 lineto
-127.249919411381 339.456188012433 lineto
-116.812956074019 349.893151349796 lineto
-104.72219399757 358.359194098425 lineto
-91.3450048695078 364.597079833428 lineto
-77.0878478123035 368.41727355327 lineto
-62.3839193286709 369.703700604884 lineto
-47.6799908450382 368.41727355327 lineto
-33.4228337878339 364.597079833428 lineto
-20.0456446597715 358.359194098425 lineto
-7.95488258332292 349.893151349796 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
-14.6324443715438 375.721921324615 lineto
-31.1746550213917 366.171271552934 lineto
-49.1240052497106 359.638242345407 lineto
-67.9351131326224 356.321336488632 lineto
-87.0364126759848 356.321336488632 lineto
-105.847520558897 359.638242345407 lineto
-123.796870787216 366.171271552934 lineto
-140.339081437064 375.721921324615 lineto
-154.971525808607 388 lineto
-167.249604483992 402.632444371543 lineto
-176.800254255673 419.174655021391 lineto
-165.493365423117 428.662261270552 lineto
-152.71074810278 436.042308821397 lineto
-138.840795653624 441.090558663577 lineto
-124.304939562283 443.653622280176 lineto
-109.544844460594 443.653622280176 lineto
-95.008988369253 441.090558663577 lineto
-81.1390359200975 436.042308821397 lineto
-68.3564185997604 428.662261270552 lineto
-57.0495297672037 419.174655021392 lineto
-47.5619235180429 407.867766188835 lineto
-40.1818759671983 395.085148868498 lineto
-35.1336261250181 381.215196419343 lineto
-32.5705625084191 366.679340328002 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
-19.0286133317599 389.664787949147 lineto
-37.4790518763773 394.608568057177 lineto
-54.7907083950463 402.681126067182 lineto
-70.4375769645681 413.637181388937 lineto
-83.9442354011552 427.143839825524 lineto
-94.9002907229109 442.790708395046 lineto
-102.972848732915 460.102364913715 lineto
-107.916628840946 478.552803458332 lineto
-109.581416790093 497.581416790092 lineto
-107.916628840946 516.610030121852 lineto
-102.972848732915 535.060468666469 lineto
-88.2689202492828 533.774041614856 lineto
-74.0117631920784 529.953847895014 lineto
-60.634574064016 523.715962160011 lineto
-48.5438119875674 515.249919411382 lineto
-38.1068486502046 504.812956074019 lineto
-29.6408059015752 492.72219399757 lineto
-23.4029201665719 479.345004869508 lineto
-19.5827264467302 465.087847812304 lineto
-18.2962993951164 450.383919328671 lineto
-19.5827264467301 435.679990845038 lineto
-23.4029201665717 421.422833787834 lineto
-29.6408059015749 408.045644659772 lineto
-38.1068486502042 395.954882583323 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
-12.2780786753846 402.632444371544 lineto
-21.8287284470659 419.174655021392 lineto
-28.3617576545933 437.124005249711 lineto
-31.6786635113684 455.935113132623 lineto
-31.6786635113685 475.036412675985 lineto
-28.3617576545935 493.847520558897 lineto
-21.8287284470662 511.796870787216 lineto
-12.2780786753851 528.339081437064 lineto
-5.84421400162682e-13 542.971525808608 lineto
14.6324443715432 555.249604483992 lineto
31.1746550213912 564.800254255674 lineto
40.662261270552 553.493365423117 lineto
48.0423088213966 540.71074810278 lineto
53.0905586635769 526.840795653625 lineto
55.6536222801759 512.304939562283 lineto
55.6536222801759 497.544844460594 lineto
53.0905586635771 483.008988369253 lineto
48.0423088213969 469.139035920098 lineto
40.6622612705524 456.356418599761 lineto
31.1746550213917 445.049529767204 lineto
19.8677661888351 435.561923518043 lineto
7.08514886849803 428.181875967199 lineto
-6.78480358065749 423.133626125018 lineto
-21.3206596719985 420.570562508419 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
1.66478794914718 407.02861333176 lineto
6.60856805717739 425.479051876377 lineto
14.6811260671816 442.790708395046 lineto
25.6371813889372 458.437576964568 lineto
39.1438398255242 471.944235401155 lineto
54.7907083950459 482.900290722911 lineto
72.1023649137149 490.972848732915 lineto
90.5528034583323 495.916628840946 lineto
109.581416790092 497.581416790093 lineto
128.610030121852 495.916628840946 lineto
147.06046866647 490.972848732916 lineto
145.774041614856 476.268920249283 lineto
141.953847895014 462.011763192079 lineto
135.715962160011 448.634574064016 lineto
127.249919411382 436.543811987568 lineto
116.812956074019 426.106848650205 lineto
104.72219399757 417.640805901575 lineto
91.3450048695081 411.402920166572 lineto
77.0878478123038 407.58272644673 lineto
62.3839193286711 406.296299395116 lineto
47.6799908450384 407.58272644673 lineto
33.422833787834 411.402920166572 lineto
20.0456446597716 417.640805901575 lineto
7.95488258332292 426.106848650204 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
14.6324443715438 400.278078675385 lineto
31.1746550213918 409.828728447066 lineto
49.1240052497107 416.361757654593 lineto
67.9351131326226 419.678663511368 lineto
87.0364126759851 419.678663511369 lineto
105.847520558897 416.361757654594 lineto
123.796870787216 409.828728447066 lineto
140.339081437064 400.278078675385 lineto
154.971525808608 388.000000000001 lineto
167.249604483993 373.367555628457 lineto
176.800254255674 356.825344978609 lineto
165.493365423117 347.337738729448 lineto
152.71074810278 339.957691178603 lineto
138.840795653625 334.909441336423 lineto
124.304939562284 332.346377719824 lineto
109.544844460595 332.346377719824 lineto
95.0089883692535 334.909441336423 lineto
81.1390359200979 339.957691178603 lineto
68.3564185997607 347.337738729448 lineto
57.049529767204 356.825344978608 lineto
47.5619235180432 368.132233811165 lineto
40.1818759671985 380.914851131502 lineto
35.1336261250182 394.784803580658 lineto
32.5705625084192 409.320659671999 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
