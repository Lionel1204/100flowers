%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: lionel shen
%%Title: Window .!canvas
%%CreationDate: Tue Apr 28 16:10:27 2020
%%BoundingBox: -113 3 726 790
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
4 -392 translate
-423 785 moveto 415 785 lineto 415 0 lineto -423 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 388 moveto
0 388 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
0 388 moveto
-1.36209923112047 403.568865453258 lineto
-5.40701022859977 418.664678807945 lineto
-12.0118304186032 432.828761414129 lineto
-20.9758756818578 445.630744789192 lineto
-32.0267780390654 456.681647146399 lineto
-44.8287614141285 465.645692409654 lineto
-58.9928440203122 472.250512599657 lineto
-74.088657374999 476.295423597137 lineto
-89.6575228282571 477.657522828257 lineto
-105.226388281515 476.295423597137 lineto
-120.322201636202 472.250512599657 lineto
-134.486284242386 465.645692409654 lineto
-147.288267617449 456.681647146399 lineto
-158.339169974656 445.630744789192 lineto
-167.303215237911 432.828761414129 lineto
-173.908035427915 418.664678807945 lineto
-177.952946425394 403.568865453258 lineto
-179.315045656514 388 lineto
0 388 lineto
8.96404526325463 400.801983375063 lineto
15.5688654532581 414.966065981247 lineto
19.6137764507374 430.061879335934 lineto
20.9758756818579 445.630744789192 lineto
19.6137764507374 461.19961024245 lineto
15.5688654532581 476.295423597137 lineto
8.9640452632547 490.45950620332 lineto
9.41469124882133e-14 503.261489578384 lineto
-11.0509023572075 514.312391935591 lineto
-23.8528857322706 523.276437198846 lineto
-38.0169683384543 529.881257388849 lineto
-53.1127816931411 533.926168386329 lineto
-68.6816471463992 535.288267617449 lineto
-84.2505125996573 533.926168386329 lineto
-99.3463259543442 529.881257388849 lineto
-113.510408560528 523.276437198846 lineto
-126.312391935591 514.312391935591 lineto
-137.363294292799 503.261489578384 lineto
0 388 lineto
15.0958133546869 392.044910997479 lineto
29.2598959608706 398.649731187483 lineto
42.0618793359338 407.613776450737 lineto
53.1127816931413 418.664678807945 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
53.1127816931413 418.664678807945 moveto
62.076826956396 431.466662183008 lineto
68.6816471463995 445.630744789192 lineto
72.7265581438788 460.726558143879 lineto
74.0886573749993 476.295423597137 lineto
72.7265581438789 491.864289050395 lineto
68.6816471463996 506.960102405082 lineto
62.0768269563962 521.124185011265 lineto
53.1127816931415 533.926168386329 lineto
42.061879335934 544.977070743536 lineto
29.2598959608708 553.941116006791 lineto
15.0958133546872 560.545936196794 lineto
2.91322521661641e-13 564.590847194274 lineto
-15.5688654532578 565.952946425394 lineto
-31.1377309065159 564.590847194274 lineto
0 388 lineto
14.1640826061837 381.395179809997 lineto
29.2598959608705 377.350268812517 lineto
44.8287614141286 375.988169581397 lineto
60.3976268673867 377.350268812517 lineto
75.4934402220736 381.395179809996 lineto
89.6575228282573 388 lineto
102.459506203321 396.964045263254 lineto
113.510408560528 408.014947620462 lineto
122.474453823783 420.816930995525 lineto
129.079274013786 434.981013601709 lineto
133.124185011266 450.076826956396 lineto
134.486284242386 465.645692409654 lineto
133.124185011266 481.214557862912 lineto
129.079274013786 496.310371217599 lineto
122.474453823783 510.474453823782 lineto
113.510408560528 523.276437198846 lineto
102.459506203321 534.327339556053 lineto
89.6575228282577 543.291384819308 lineto
0 388 lineto
6.60482019000342 373.835917393816 lineto
15.568865453258 361.033934018753 lineto
26.6197678104656 349.983031661545 lineto
39.4217511855288 341.018986398291 lineto
53.5858337917124 334.414166208287 lineto
68.6816471463993 330.369255210808 lineto
84.2505125996574 329.007155979687 lineto
99.8193780529155 330.369255210808 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
99.8193780529155 330.369255210808 moveto
114.915191407602 334.414166208287 lineto
129.079274013786 341.018986398291 lineto
141.881257388849 349.983031661545 lineto
152.932159746057 361.033934018753 lineto
161.896205009312 373.835917393816 lineto
168.501025199315 387.999999999999 lineto
172.545936196795 403.095813354686 lineto
173.908035427915 418.664678807945 lineto
172.545936196795 434.233544261203 lineto
168.501025199315 449.32935761589 lineto
0 388 lineto
-4.04491099747937 372.904186645313 lineto
-5.40701022859991 357.335321192055 lineto
-4.04491099747948 341.766455738797 lineto
-2.16715534406831e-13 326.67064238411 lineto
6.6048201900032 312.506559777926 lineto
15.5688654532578 299.704576402863 lineto
26.6197678104654 288.653674045655 lineto
39.4217511855286 279.689628782401 lineto
53.5858337917122 273.084808592397 lineto
68.6816471463992 269.039897594918 lineto
84.2505125996573 267.677798363797 lineto
99.8193780529154 269.039897594918 lineto
114.915191407602 273.084808592397 lineto
129.079274013786 279.6896287824 lineto
141.881257388849 288.653674045655 lineto
152.932159746057 299.704576402862 lineto
161.896205009312 312.506559777926 lineto
168.501025199315 326.670642384109 lineto
0 388 lineto
-12.8019833750633 379.035954736745 lineto
-23.8528857322709 367.985052379538 lineto
-32.8169309955256 355.183069004475 lineto
-39.4217511855292 341.018986398291 lineto
-43.4666621830086 325.923173043604 lineto
-44.8287614141291 310.354307590346 lineto
-43.4666621830087 294.785442137088 lineto
-39.4217511855294 279.689628782401 lineto
-32.816930995526 265.525546176217 lineto
-23.8528857322714 252.723562801154 lineto
-12.8019833750638 241.672660443946 lineto
-6.4126481902349e-13 232.708615180691 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-6.4126481902349e-13 232.708615180691 moveto
14.1640826061831 226.103794990688 lineto
29.25989596087 222.058883993208 lineto
44.8287614141281 220.696784762088 lineto
60.3976268673863 222.058883993208 lineto
75.4934402220733 226.103794990688 lineto
89.657522828257 232.708615180691 lineto
0 388 lineto
-15.5688654532581 389.362099231121 lineto
-31.1377309065163 388 lineto
-46.2335442612033 383.955089002521 lineto
-60.3976268673871 377.350268812517 lineto
-73.1996102424504 368.386223549263 lineto
-84.2505125996581 357.335321192055 lineto
-93.2145578629128 344.533337816992 lineto
-99.8193780529163 330.369255210808 lineto
-103.864289050396 315.273441856121 lineto
-105.226388281516 299.704576402863 lineto
-103.864289050396 284.135710949605 lineto
-99.8193780529166 269.039897594918 lineto
-93.2145578629132 254.875814988734 lineto
-84.2505125996586 242.073831613671 lineto
-73.199610242451 231.022929256463 lineto
-60.3976268673878 222.058883993209 lineto
-46.2335442612041 215.454063803205 lineto
-31.1377309065171 211.409152805726 lineto
0 388 lineto
-11.0509023572076 399.050902357208 lineto
-23.8528857322708 408.014947620462 lineto
-38.0169683384545 414.619767810466 lineto
-53.1127816931415 418.664678807945 lineto
-68.6816471463996 420.026778039066 lineto
-84.2505125996578 418.664678807946 lineto
-99.3463259543448 414.619767810466 lineto
-113.510408560529 408.014947620463 lineto
-126.312391935592 399.050902357208 lineto
-137.3632942928 388.000000000001 lineto
-146.327339556054 375.198016624937 lineto
-152.932159746058 361.033934018754 lineto
-156.977070743537 345.938120664067 lineto
-158.339169974658 330.369255210809 lineto
-156.977070743537 314.80038975755 lineto
-152.932159746058 299.704576402863 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-152.932159746058 299.704576402863 moveto
-146.327339556055 285.54049379668 lineto
-137.3632942928 272.738510421616 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
