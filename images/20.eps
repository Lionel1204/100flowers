%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: lionel shen
%%Title: Window .!canvas
%%CreationDate: Mon Apr 27 19:29:07 2020
%%BoundingBox: -113 3 726 790
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
4 -392 translate
-423 785 moveto 415 785 lineto 415 0 lineto -423 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 388 moveto
0 388 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
145 388 moveto
150 388 lineto
153.090169943749 397.510565162952 lineto
140.954915028125 406.327343947339 lineto
124.774575140626 394.571638901489 lineto
132.5 370.79522599411 lineto
162.5 370.79522599411 lineto
173.315594803123 404.082204064441 lineto
140.954915028125 427.59361415614 lineto
104.549150281253 401.143277802978 lineto
120 353.590451988221 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
125.573683548744 315.5 moveto
129.903810567666 313 lineto
137.33525882244 319.691306063589 lineto
131.234209176303 333.394487928228 lineto
111.343771268937 331.303918662874 lineto
106.145978998493 306.850228644529 lineto
132.126741112026 291.850228644529 lineto
158.136810003735 315.269799867089 lineto
141.867344280703 351.811618172793 lineto
97.1138589891309 347.107837325749 lineto
86.7182744482429 298.200457289059 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
72.4999999999999 262.426316451256 moveto
74.9999999999999 258.096189432334 lineto
84.781476007338 260.175306340512 lineto
86.3494029563528 275.093134771036 lineto
68.0784938035008 283.227867632552 lineto
51.3502286445293 264.649246995617 lineto
66.3502286445293 238.668484882084 lineto
100.585394670213 245.945394060705 lineto
104.766533200919 285.726269875436 lineto
63.6569876070016 304.029418813847 lineto
30.2004572890587 266.872177539978 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-8.85402862138562e-14 243 moveto
-9.15933995315754e-14 238 lineto
9.51056516295144 234.909830056251 lineto
18.3273439473385 247.045084971875 lineto
6.5716389014891 263.225424859374 lineto
-17.2047740058897 255.5 lineto
-17.2047740058898 225.5 lineto
16.0822040644406 214.684405196877 lineto
39.5936141561395 247.045084971875 lineto
13.1432778029783 283.450849718747 lineto
-34.4095480117794 268 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-72.5000000000001 262.426316451257 moveto
-75.0000000000001 258.096189432334 lineto
-68.3086939364115 250.66474117756 lineto
-54.6055120717725 256.765790823697 lineto
-56.6960813371255 276.656228731063 lineto
-81.1497713554707 281.854021001507 lineto
-96.1497713554707 255.873258887974 lineto
-72.7302001329107 229.863189996265 lineto
-36.1883818272067 246.132655719297 lineto
-40.892162674251 290.886141010869 lineto
-89.7995427109412 301.281725551757 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-125.573683548744 315.5 moveto
-129.903810567666 313 lineto
-127.824693659488 303.218523992662 lineto
-112.906865228964 301.650597043647 lineto
-104.772132367448 319.921506196499 lineto
-123.350753004383 336.649771355471 lineto
-149.331515117916 321.649771355471 lineto
-142.054605939295 287.414605329788 lineto
-102.273730124564 283.233466799081 lineto
-83.9705811861526 324.343012392998 lineto
-121.127822460022 357.799542710941 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-145 388 moveto
-150 388 lineto
-153.090169943749 378.489434837049 lineto
-140.954915028125 369.672656052662 lineto
-124.774575140626 381.428361098511 lineto
-132.5 405.20477400589 lineto
-162.5 405.20477400589 lineto
-173.315594803123 371.91779593556 lineto
-140.954915028125 348.406385843861 lineto
-104.549150281253 374.856722197022 lineto
-120 422.409548011779 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-125.573683548743 460.5 moveto
-129.903810567665 463 lineto
-137.335258822439 456.308693936412 lineto
-131.234209176302 442.605512071773 lineto
-111.343771268937 444.696081337126 lineto
-106.145978998493 469.149771355471 lineto
-132.126741112026 484.149771355471 lineto
-158.136810003735 460.730200132911 lineto
-141.867344280703 424.188381827207 lineto
-97.1138589891307 428.892162674251 lineto
-86.7182744482427 477.799542710941 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-72.4999999999996 513.573683548744 moveto
-74.9999999999996 517.903810567666 lineto
-84.7814760073376 515.824693659488 lineto
-86.3494029563525 500.906865228964 lineto
-68.0784938035005 492.772132367448 lineto
-51.350228644529 511.350753004383 lineto
-66.3502286445289 537.331515117916 lineto
-100.585394670212 530.054605939295 lineto
-104.766533200918 490.273730124564 lineto
-63.6569876070014 471.970581186153 lineto
-30.2004572890584 509.127822460022 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
3.30013794069828e-13 533 moveto
3.41393580072236e-13 538 lineto
-9.51056516295117 541.090169943749 lineto
-18.3273439473383 528.954915028125 lineto
-6.57163890148888 512.774575140626 lineto
17.2047740058899 520.5 lineto
17.20477400589 550.5 lineto
-16.0822040644403 561.315594803123 lineto
-39.5936141561392 528.954915028125 lineto
-13.1432778029781 492.549150281252 lineto
34.4095480117795 508 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
72.5000000000002 513.573683548743 moveto
75.0000000000002 517.903810567665 lineto
68.3086939364116 525.335258822439 lineto
54.6055120717726 519.234209176302 lineto
56.6960813371256 499.343771268937 lineto
81.1497713554707 494.145978998493 lineto
96.1497713554707 520.126741112026 lineto
72.7302001329108 546.136810003735 lineto
36.1883818272068 529.867344280703 lineto
40.8921626742511 485.113858989131 lineto
89.7995427109412 474.718274448243 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
125.573683548743 460.499999999999 moveto
129.903810567666 462.999999999999 lineto
127.824693659488 472.781476007337 lineto
112.906865228964 474.349402956352 lineto
104.772132367448 456.0784938035 lineto
123.350753004383 439.350228644529 lineto
149.331515117916 454.350228644529 lineto
142.054605939294 488.585394670212 lineto
102.273730124564 492.766533200918 lineto
83.9705811861526 451.656987607001 lineto
121.127822460022 418.200457289058 lineto
0 388 lineto
1 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
